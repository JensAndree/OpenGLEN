/* Copyright 2012 Richard Sahlin
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
*/

 /**
 * Fragment shader for blurred material
 * This shader will sample 5 different points, apply a weight factor
 * to surrounding pixels.
 * @author Richard Sahlin
 */
precision mediump float;
uniform vec4 MatDiffuse_uniform;        //1/width, 1/height and weight in X,Y,Z
uniform sampler2D Texture_uniform;      //The texture sampler
varying vec2 vTexCoord;

void main()
{
    vec4 color = texture2D(Texture_uniform, vec2(vTexCoord.s - MatDiffuse_uniform.x,
                                                 vTexCoord.t)) +
                 texture2D(Texture_uniform, vec2(vTexCoord.s + MatDiffuse_uniform.x,
                                                 vTexCoord.t)) +
                 texture2D(Texture_uniform, vec2(vTexCoord.s,
                                                 vTexCoord.t + MatDiffuse_uniform.y)) +
                 texture2D(Texture_uniform, vec2(vTexCoord.s,
                                                 vTexCoord.t - MatDiffuse_uniform.y));
    gl_FragColor = (texture2D(Texture_uniform, vTexCoord) * MatDiffuse_uniform.z +
                color) / (4.0+MatDiffuse_uniform.z);

}