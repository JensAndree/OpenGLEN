/* Copyright 2012 Richard Sahlin
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

 /**
 * Vertex shader for 2 unlit texture sources, source 2 is using the same texture coordinates as source 1.
 * @author Richard Sahlin
 */

precision mediump float;
uniform mat4 PerspectiveMatrix_uniform;
uniform vec4 MatDiffuse_uniform;        //The material diffuse color.
uniform sampler2D Texture_uniform;      //The texture sampler
uniform sampler2D Texture2_uniform;     //Texture 2 sampler.
uniform vec4 Translate_uniform;         //Translation
uniform vec4 Scale_uniform;             //Scale
uniform vec4 Rotate_uniform;

attribute vec3 vertex_attrib;
attribute vec2 texCoords_attrib;

varying vec2 vTexCoord;

mat4 vertexTransform();                //Lib function, Transform (scale, translate and rotate) using setup uniform values

void main()
{
    gl_Position = vertexTransform() * vec4(vertex_attrib, 1);
    vTexCoord = texCoords_attrib;
}
